cmake_minimum_required(VERSION 3.8)
project(mosc)

set(CMAKE_C_STANDARD 99)

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif ()

set(MSC_DEPS)
set(MSC_DEFS)
if(CMAKE_BUILD_TYPE STREQUAL Debug)
    set(MSC_DEFS DEBUG MSC_DEBUG_TRACE_INSTRUCTIONS=0)
endif()

set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-Os -g")

set(CMAKE_C_FLAGS "-Wall -Wextra")
set(CMAKE_C_FLAGS_RELEASE "-O3")
set(CMAKE_C_FLAGS_MINSIZEREL "-Os")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-Os -g")

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/out/library)

file(GLOB SOURCE_FILES_C src/**/*.c)
file(GLOB SOURCE_FILES_H src/**/*.h)
file(GLOB SOURCE_FILES_INC src/**/*.h)
set(SOURCE_FILES ${SOURCE_FILES_C} ${SOURCE_FILES_H} ${SOURCE_FILES_INC})

IF (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    LIST(APPEND MSC_DEPS m)
ELSEIF (CMAKE_SYSTEM_NAME STREQUAL "FreeBSD")
    LIST(APPEND MSC_DEPS m)
ENDIF ()

add_library(mosc SHARED ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(mosc PRIVATE ${MSC_DEPS})
TARGET_COMPILE_DEFINITIONS(mosc PRIVATE ${MSC_DEFS})
add_library(moscs ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(moscs PRIVATE ${MSC_DEPS})
TARGET_COMPILE_DEFINITIONS(moscs PRIVATE ${MSC_DEFS})
# set(SOURCE_FILES test/main.c)
file(GLOB TEST_SOURCE_FILES src/api/msc.h test/*.c test/*.h test/**/*.c test/**/*.h src/**/*.h)
set(SOURCE_FILES ${SOURCE_FILES} ${TEST_SOURCE_FILES})
add_executable(mosct ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(mosct PRIVATE ${MSC_DEPS})
TARGET_COMPILE_DEFINITIONS(mosct PRIVATE ${MSC_DEFS})

link_directories(${PROJECT_BINARY_DIR}/out/library)



set_target_properties(mosct PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin/
        RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin/
        )

# target_link_libraries(mosct mosc)


set_target_properties(moscs PROPERTIES OUTPUT_NAME "mosc")